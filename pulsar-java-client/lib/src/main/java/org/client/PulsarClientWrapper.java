/*
 * This source file was generated by the Gradle 'init' task
 */
package org.client;

import org.apache.pulsar.client.api.PulsarClient;
import org.apache.pulsar.client.api.Producer;
import org.apache.pulsar.client.api.Consumer;
import org.apache.pulsar.client.api.Message;
import org.apache.pulsar.client.api.PulsarClientException;

public class PulsarClientWrapper {
    private PulsarClient client;
    private Producer<byte[]> producer;
    private Consumer<byte[]> consumer;

    public PulsarClientWrapper(String serviceUrl) throws PulsarClientException {
        this.client = PulsarClient.builder()
                .serviceUrl(serviceUrl)
                .build();
    }

    public void createProducer(String topic) throws PulsarClientException {
        this.producer = client.newProducer()
                .topic(topic)
                .create();
    }

    public void sendMessage(String message) throws PulsarClientException {
        if (this.producer != null) {
            this.producer.send(message.getBytes());
        } else {
            throw new PulsarClientException("Producer is not initialized.");
        }
    }

    public void createConsumer(String topic, String subscriptionName) throws PulsarClientException {
        this.consumer = client.newConsumer()
                .topic(topic)
                .subscriptionName(subscriptionName)
                .subscribe();
    }

    public String receiveMessage() throws PulsarClientException {
        if (this.consumer != null) {
            Message<byte[]> msg = this.consumer.receive();
            this.consumer.acknowledge(msg);
            return new String(msg.getData());
        } else {
            throw new PulsarClientException("Consumer is not initialized.");
        }
    }

    public void close() throws PulsarClientException {
        if (this.producer != null) {
            this.producer.close();
        }
        if (this.consumer != null) {
            this.consumer.close();
        }
        if (this.client != null) {
            this.client.close();
        }
    }
}
